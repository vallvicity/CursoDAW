---
title: "Albertus' Dylemma"
---


```{mermaid}

flowchart LR

A[Problem] --> B(Let's code & See what happens...)
C[The Pitt]
D(Optimal Solution)
C --> B
B --> C
C --> A


```
## Introduction


::: {.summary}
As a future developer I want to relate the struggles and reflect the mentality that you, my fellow reader and potential developer, should avoid.
:::

</br>

::: {.labs}
My porpose is to stablish some patterns of productive thinking to help you to get out from the *Valley of Dispair* a.k.a. (and from now on) **The Pitt** that most likely you would fall into.
:::

</br>

Trust me, I've been there...Actually I AM constantly there, that's why I want to reflect that in this kind of journal.

::: {.callout-caution appearance="minimal" collapse="true"}
## Anyway
That's the tricky part, I don't know how as of today (01/19/2023). But hopefully I will.
First of all you need to understand the concept of [iteration](https://en.wikipedia.org/wiki/Iteration#Education), my friend. 
With that in mind, we just need to start.
:::

## Albertus' Dylemma... What are we talking about?

You surely noticed the flowchart above. It's such a common pattern for us who just started programming. Have you ever feel identified with it?


As you keep progressing in your coding lessons, problems are going to be slightly more difficult and complex every time. Until you reach to a point when you can't completely see the solution in your mind.  
You'll probably see straight how to get from A to B, but from B to C you see it blurry... Well, then you just have to get to B so you can see more clear how to get to C better, right?  
Yes, I always trick to myself like that...

::: {.callout-note}
## When we talk about **Albertus' Dylemma**:   
It is that moment when you either need to stop, take two steps back and think what led you into this **or** keep in the pitt.
:::





```{mermaid}

flowchart LR
A[Problema] --> B[Decision]
B --> C(Code & See)
B --> D(Piensa)
D --> E[Sabes lo que haces?]
C --> G[El Pozo]
D --> F[Te enamoraste de tu primera idea?]
G --> A


```

## Rule nÂº 1: Avoid the Pitt

It's all about preventing burnouts. You must see what's your level of energy at every time. I'm starting a kind of journal that reflects it and I'm doing tasks according to that level. Here's the cheatsheet we made at class:

![Energy levels and their respective appropiate tasks.](/images/energy.jpg)

See? Since today I'm kind of Low Energy, I decided after a bit of reading (I'm reading 'Atomic Habits' at this moment, by the way), to start writing a bit in here.  
But it's important to do somenthing instead. The fact that you don't have the energy to do complex tasks doesn't mean that you should do nothing at all. In this way you are still productive and don't have the guilt of doing fuck all. Try to change what you're doing for somenthing less demanding. Do not hesitate to ask someone about the problem you're at.  

Give yourself a break or whatever. Keep in mind that your mental energy is your most precious asset, don't waste it.

:::{.callout-note}
**Summarizing:** If you're gonna face a difficult problem, make sure you have the mental energy for it.
:::


